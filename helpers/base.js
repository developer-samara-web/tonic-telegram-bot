//? HELPERS | BASE

//* Requires
const fs = require('fs');
const archiver = require('archiver');
const path = require('path');
const { Markup } = require('telegraf')


//* START
const LOG = async (user, object, error, ctx) => {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
    const now = new Date()
    const date = now.toISOString().slice(0, 10) // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ ISO —Ñ–æ—Ä–º–∞—Ç–µ (YYYY-MM-DD)
    const time = now.toTimeString().slice(0, 8) // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –≤ HH:MM:SS

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª–æ–≥–∞
    const logMessage = `[${error ? 'ERROR' : 'INFO'}][${date} ${time}] User: ${user}, Function: ${object}, ${error ? 'ERROR' : 'INFO'}: ${error ? error : 'OK'}\n`

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    const logDir = path.join(__dirname, '..', 'logs')

    try {
        // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        await fs.promises.mkdir(logDir, { recursive: true })
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –ª–æ–≥–∞ —Å –∏–º–µ–Ω–µ–º –ø–æ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–µ
        const filePath = path.join(logDir, `${date}.log`)
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –ª–æ–≥–∞
        await fs.promises.appendFile(filePath, logMessage)

        // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –≤ Telegram
        if (error) {
            await ctx.telegram.sendMessage(
                process.env.TELEGRAM_ADMIN_ID, 
                `üö´  <b>–û—à–∏–±–∫–∞ –æ—Ç ${user}:</b>\n${error}\n\n<b>üî∏  –§—É–Ω–∫—Ü–∏—è:</b>\n[${object}]\n\n<b>üî∏  –ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b>\n${error.stack}`, 
                { parse_mode: 'HTML' }
            )
        }
    } catch (error) {
        // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤:', error)
    }
}
//* END


//* START
const Archive = (ctx, logDirectory, outputFilePath) => {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ callbackQuery, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ 'BOT'
    const { username = 'BOT' } = ctx.message?.from || ctx.callbackQuery?.from;

    try {
        return new Promise((resolve, reject) => {
            // –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∞—Ä—Ö–∏–≤–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
            const output = fs.createWriteStream(outputFilePath);
            // –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∞ zip –∏ —É—Ä–æ–≤–Ω–µ–º —Å–∂–∞—Ç–∏—è 9
            const archive = archiver('zip', { zlib: { level: 9 } });

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è 'close' –¥–ª—è –ø–æ—Ç–æ–∫–∞ –≤—ã–≤–æ–¥–∞, —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–æ–º–∏—Å —Å –ø—É—Ç—ë–º –∫ –∞—Ä—Ö–∏–≤—É
            output.on('close', () => {
                resolve(outputFilePath);
            });

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏, –æ—Ç–∫–ª–æ–Ω—è–µ–º –ø—Ä–æ–º–∏—Å –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            archive.on('error', reject);

            // –ù–∞–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ö–∏–≤–∞ –≤ –ø–æ—Ç–æ–∫ –≤—ã–≤–æ–¥–∞
            archive.pipe(output);

            // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –≤ –∞—Ä—Ö–∏–≤, –∏–≥–Ω–æ—Ä–∏—Ä—É—è —Ñ–∞–π–ª —Å–∞–º–æ–≥–æ –∞—Ä—Ö–∏–≤–∞
            archive.glob('**/*', {
                cwd: logDirectory,
                ignore: [path.basename(outputFilePath)]
            });

            // –ó–∞–≤–µ—Ä—à–∞–µ–º –∞—Ä—Ö–∏–≤–∞—Ü–∏—é
            archive.finalize();

            // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –Ω–∞—á–∞–ª–æ –∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
            LOG(username, 'Helpers/Base/Archive');
        });
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–ª–∞
        LOG(username, 'Helpers/Base/Archive', error, ctx);
    }
}
//* END


//* START
const DateCurent = async (ctx, date) => {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ callbackQuery, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ 'BOT'
    const { username = 'BOT' } = ctx.message?.from || ctx.callbackQuery?.from

    try {
        // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—Ç—ã, –æ—Ç–Ω–∏–º–∞—è —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
        const dateGenerateAsync = async (num) => {
            const previousDay = new Date()
            previousDay.setDate(previousDay.getDate() - num)

            const [year, month, day] = [
                previousDay.getFullYear(),
                String(previousDay.getMonth() + 1).padStart(2, '0'), // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –º–µ—Å—è—Ü —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª—ë–º
                String(previousDay.getDate()).padStart(2, '0') // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–µ–Ω—å —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª—ë–º
            ];

            return `${year}-${month}-${day}` // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
        };

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ date
        switch (date) {
            case '–°–µ–≥–æ–¥–Ω—è':
                // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                LOG(username, 'Helpers/Base/DateCurent')
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
                return `date=${await dateGenerateAsync(0)}`
            case '–í—á–µ—Ä–∞':
                // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                LOG(username, 'Helpers/Base/DateCurent');
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—É –≤—á–µ—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è
                return `date=${await dateGenerateAsync(1)}`
            case '–ó–∞ 3 –¥–Ω—è':
                // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                LOG(username, 'Helpers/Base/DateCurent')
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –¥–Ω—è
                return `from=${await dateGenerateAsync(3)}&to=${await dateGenerateAsync(0)}`
            case '–ó–∞ –Ω–µ–¥–µ–ª—é':
                // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                LOG(username, 'Helpers/Base/DateCurent');
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
                return `from=${await dateGenerateAsync(7)}&to=${await dateGenerateAsync(0)}`
            case '–ó–∞ –º–µ—Å—è—Ü':
                // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                LOG(username, 'Helpers/Base/DateCurent')
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü
                return `from=${await dateGenerateAsync(30)}&to=${await dateGenerateAsync(0)}`
            default:
                // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                LOG(username, 'Helpers/Base/DateCurent')
                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—ã, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º ':'
                return `from=${date.split(':')[0]}&to=${date.split(':')[1]}`
        }
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–ª–∞
        LOG(username, 'Helpers/Base/DateCurent', error, ctx)
    }
}
//* END


//* START
const GroupByDate = (data) => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ reduce –¥–ª—è –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –¥–∞—Ç–µ
    return data.reduce((acc, item) => {
        const dateKey = item.date; // –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á –¥–∞—Ç—ã –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞

        // –ï—Å–ª–∏ –∫–ª—é—á –¥–∞—Ç—ã –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–µ, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —ç—Ç–æ–π –¥–∞—Ç—ã
        if (!acc[dateKey]) {
            acc[dateKey] = {
                date: dateKey, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞—Ç—É
                campaign_name: item.campaign_name, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏
                clicks: 0, // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤
                revenueUsd: 0.0, // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—Ö–æ–¥ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö
                CPC: 0.0, // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–ª–∏–∫
                items: [] // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            };
        }

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã
        acc[dateKey].clicks += Number(item.clicks);
        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ–±—â–∏–π –¥–æ—Ö–æ–¥ –¥–ª—è –¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã
        acc[dateKey].revenueUsd += parseFloat(item.revenueUsd);
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã
        acc[dateKey].items.push(item);

        return acc; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
    }, {}); // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
}
//* END


//* START
const CalculateStatistics = (groupedData, companyName) => {
    let totalClicks = 0 // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–ª–∏–∫–æ–≤
    let totalRevenueUsd = 0.0 // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ–±—â–µ–≥–æ –¥–æ—Ö–æ–¥–∞ –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–ª—é—á–∞–º –¥–∞—Ç –≤ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    for (const dateKey in groupedData) {
        totalClicks += groupedData[dateKey].clicks // –°—É–º–º–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –¥–∞—Ç—ã
        totalRevenueUsd += groupedData[dateKey].revenueUsd // –°—É–º–º–∏—Ä—É–µ–º –¥–æ—Ö–æ–¥ –¥–ª—è –∫–∞–∂–¥–æ–π –¥–∞—Ç—ã
        // –í—ã—á–∏—Å–ª—è–µ–º CPC (—Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–ª–∏–∫) –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
        groupedData[dateKey].CPC = (groupedData[dateKey].revenueUsd / groupedData[dateKey].clicks).toFixed(2)
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
    return {
        campaign_name: companyName, // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏
        totalClicks: totalClicks, // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤
        totalRevenueUsd: totalRevenueUsd.toFixed(2), // –û–±—â–∏–π –¥–æ—Ö–æ–¥, –æ–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–π –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
        totalCPC: (totalRevenueUsd / totalClicks).toFixed(2) // –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–ª–∏–∫, –æ–∫—Ä—É–≥–ª–µ–Ω–Ω–∞—è –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
    }
}
//* END


//* START
const CreateKeywordItem = (item) => {
    // –°–æ–∑–¥–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ
    return {
        ...item, // –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        CPC: (item.revenueUsd / item.clicks).toFixed(2) // –í—ã—á–∏—Å–ª—è–µ–º CPC (—Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–ª–∏–∫) –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
    }
}
//* END


//* START
const KeywordUpdateItem = (existingItem, item) => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤, —Å–∫–ª–∞–¥—ã–≤–∞—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    existingItem.clicks = String(Number(existingItem.clicks) + Number(item.clicks))
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –¥–æ—Ö–æ–¥, —Å–∫–ª–∞–¥—ã–≤–∞—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏ –Ω–æ–≤—ã–π –¥–æ—Ö–æ–¥, –∑–∞—Ç–µ–º –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
    existingItem.revenueUsd = (parseFloat(existingItem.revenueUsd) + parseFloat(item.revenueUsd)).toFixed(2)
    // –í—ã—á–∏—Å–ª—è–µ–º CPC (—Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–ª–∏–∫) –∫–∞–∫ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –¥–æ—Ö–æ–¥–∞ –∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–ª–∏–∫–æ–≤ –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
    existingItem.CPC = (existingItem.revenueUsd / existingItem.clicks).toFixed(2)
}
//* END


//* START
const FilterKeyword = (data, companyName) => {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∏–º–µ–Ω–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∑–∞—Ç–µ–º —Ä–µ–¥—É—Ü–∏—Ä—É–µ–º –∏—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
    return data.filter(obj => obj.campaign_name === companyName) // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∑–∞–¥–∞–Ω–Ω–æ–º—É –∏–º–µ–Ω–∏ –∫–æ–º–ø–∞–Ω–∏–∏
        .reduce((acc, item) => {
            // –ù–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–µ –ø–æ –∏–º–µ–Ω–∏ –∫–∞–º–ø–∞–Ω–∏–∏ –∏ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
            const existingItem = acc.find(group => group.campaign_name === item.campaign_name && group.keyword === item.keyword)
            if (existingItem) {
                // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
                KeywordUpdateItem(existingItem, item)
            } else {
                // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä
                acc.push(CreateKeywordItem(item))
            }
            return acc // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
        }, []) // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä –ø—É—Å—Ç—ã–º –º–∞—Å—Å–∏–≤–æ–º
}
//* END


//* START
const CreateStatsItem = (item) => {
    // –°–æ–∑–¥–∞–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ
    return {
        ...item, // –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        revenueUsd: parseFloat(item.revenueUsd).toFixed(2), // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–æ—Ö–æ–¥ –≤ —á–∏—Å–ª–æ –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
        CPC: (item.revenueUsd / item.clicks).toFixed(2) // –í—ã—á–∏—Å–ª—è–µ–º CPC (—Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–ª–∏–∫) –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
    }
}
//* END


//* START
const UpdateStatsItem = (existingItem, item) => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤, —Å–∫–ª–∞–¥—ã–≤–∞—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    existingItem.clicks = String(Number(existingItem.clicks) + Number(item.clicks))
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –¥–æ—Ö–æ–¥, —Å–∫–ª–∞–¥—ã–≤–∞—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∏ –Ω–æ–≤—ã–π –¥–æ—Ö–æ–¥, –∑–∞—Ç–µ–º –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
    existingItem.revenueUsd = (parseFloat(existingItem.revenueUsd) + parseFloat(item.revenueUsd)).toFixed(2)
    
    // –í—ã—á–∏—Å–ª—è–µ–º CPC (—Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –∫–ª–∏–∫) –∫–∞–∫ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –¥–æ—Ö–æ–¥–∞ –∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–ª–∏–∫–æ–≤ –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤
    existingItem.CPC = (existingItem.revenueUsd / existingItem.clicks).toFixed(2)
}
//* END


//* START
const FilterStats = (data, source, compains) => {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, —á—å–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –º–∞—Å—Å–∏–≤–µ compains
    const filter = data.filter(item => compains.includes(item.campaign_name))

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    return filter.filter(obj => obj.network === source)
        .reduce((acc, item) => {
            // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∞–∫–∫—É–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ –∏–º–µ–Ω–∏ –∫–∞–º–ø–∞–Ω–∏–∏
            const existingItem = acc.find(group => group.campaign_name === item.campaign_name)
            if (existingItem) {
                // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
                UpdateStatsItem(existingItem, item)
            } else {
                // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –º–∞—Å—Å–∏–≤
                acc.push(CreateStatsItem(item))
            }
            return acc // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–∫–∫—É–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
        }, []) // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è –∞–∫–∫—É–º—É–ª—è—Ü–∏–∏
}
//* END


//* START
const CreateURL = (ctx, update, offer, network) => {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'BOT'
    const { username = 'BOT' } = ctx.message?.from || ctx.callbackQuery?.from
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∫–ª–∞–º—ã, —É–¥–∞–ª—è—è ' PR' –∏ –∑–∞–º–µ–Ω—è—è –ø—Ä–æ–±–µ–ª—ã –Ω–∞ '+'
    const adTitle = offer.replace(/(?:\s|%20)?PR$/, '').replace(/\s+/g, '+').replace(/%20/g, '+');

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–µ—Ç—å Facebook
        if (network === 'facebook') {
            // –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º URL –¥–ª—è Facebook
            return `${update.data}/?adtitle=${adTitle}${process.env.FACEBOOK_URL}`
        } else if (network === 'tiktok') {
            // –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º URL –¥–ª—è TikTok
            return `${update.data}/?adtitle=${adTitle}${process.env.TIKTOK_URL}`
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–∏–∏ URL
        LOG(username, 'Helpers/Base/CreateURL')
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç
        LOG(username, 'Helpers/Base/CreateURL', error)
    }
}
//* END


//* START
const UpdateRowData = (ctx, row, update, offer) => {
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'BOT'
    const { username = 'BOT' } = ctx.message?.from || ctx.callbackQuery?.from
    
    // –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ –≤ row._rawData
    const updateMap = { status: 0, network: 1 }

    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ updateMap
        if (update.type in updateMap) {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω–¥–µ–∫—Å –≤ row._rawData
            row._rawData[updateMap[update.type]] = update.data
        } 
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è 'href' –∏ —Å–µ—Ç—å Facebook –∏–ª–∏ TikTok
        else if (update.type === 'href' && (row._rawData[1] === 'facebook' || row._rawData[1] === 'tiktok')) {
            // –°–æ–∑–¥–∞–µ–º URL –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ row._rawData
            row._rawData[5] = CreateURL(ctx, update, offer, row._rawData[1])
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –≤ 'Cloudflare'
            row._rawData[0] = 'Cloudflare'
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∏
        LOG(username, 'Helpers/Base/UpdateRowData')
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç
        LOG(username, 'Helpers/Base/UpdateRowData', error)
    }
}
//* END


//* START
const SendAdminMessage = async (ctx, username) => {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏
    return await ctx.telegram.sendMessage(process.env.TELEGRAM_ADMIN_ID, `‚ôªÔ∏è <b>–ù–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –æ—Ç <i>${username}</i>, –∑–∞–≥—Ä—É–∂–∞—é...</b>`, {
        parse_mode: 'HTML' // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑–º–µ—Ç–∫–∏ HTML
    })
}
//* END


//* START
const EditAdminMessage = async (ctx, message_id, username, keyboard) => {
    // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å –Ω–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∑–∞—è–≤–∫–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    await ctx.telegram.editMessageText(process.env.TELEGRAM_ADMIN_ID, message_id, null, `‚ôªÔ∏è <b>–ó–∞—è–≤–∫–∞ ‚Ññ${message_id} | –ù–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –æ—Ç <i>${username}</i></b>`, {
        parse_mode: 'HTML', // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º —Ä–∞–∑–º–µ—Ç–∫–∏ HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        reply_markup: keyboard.reply_markup // –ü–µ—Ä–µ–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    })
}
//* END


//* START
const CreateKeyboard = (id, message_id) => {
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
    return Markup.inlineKeyboard([
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º '‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ', –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –¥–µ–π—Å—Ç–≤–∏–µ–º 'complite', id –∏ message_id
        Markup.button.callback('‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ', JSON.stringify({ action: 'complite', id, message_id }))
    ])
}
//* END


module.exports = {
    LOG,
    Archive,
    GroupByDate,
    CalculateStatistics,
    FilterKeyword,
    FilterStats,
    UpdateRowData,
    DateCurent,
    SendAdminMessage,
    EditAdminMessage,
    CreateKeyboard
}