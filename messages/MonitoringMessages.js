//? MESSAGES | MONITORING

//* Requires
const { LOG, DateNow } = require('@helpers/base')
const { Markup } = require('telegraf')


//* START
const MonitoringMessage = async (ctx, message) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'BOT' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'

    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –º–∞—Å—Å–∏–≤–µ message
        const result = message.length
            ? `‚ôªÔ∏è <b>[ ${DateNow()} ]  –£ –≤–∞—Å –≤ –æ—á–µ—Ä–µ–¥–∏:</b>\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n${message.map(item => `${item.status ? 'üî∏' : 'üî∫'} ${item.name}\n${item.status}\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n`).join('')}`
            : `üî∏ <b>–°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –ø—É—Å—Ç.</b>`; // –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Å–ø–∏—Å–∫–µ, –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ message –ø—É—Å—Ç–æ–π

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
        await ctx.replyWithHTML(result)

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Monitoring/MonitoringMessage')
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞
        LOG(username, 'Messages/Monitoring/MonitoringMessage', error, ctx)
    }
}
//* END


//* START
const MonitoringAddMessage = async (ctx, message) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'BOT' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'

    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –º–∞—Å—Å–∏–≤–µ message
        const result = message.length
            ? `‚ôªÔ∏è <b>[ ${DateNow()} ]  –£ –≤–∞—Å –≤ –æ—á–µ—Ä–µ–¥–∏:</b>\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n${message.map(item => `${item.status == 'üî∏ –í –æ—á–µ—Ä–µ–¥–∏' ? 'üî∏' : 'üî∫'} <b>${item.name}</b>\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n`).join('')}`
            : `üî∏ <b>–í —Ç–∞–±–ª–∏—Ü–µ –Ω–µ—Ç –∫–æ–º–ø–∞–Ω–∏–π –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ.</b>\n(–î–ª—è —á—Ç–µ–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–π –ø—Ä–æ—Å—Ç–∞–≤—å—Ç–µ —Å—Ç–∞—Ç—É—Å "–°–æ–∑–¥–∞—Ç—å").`; // –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Å–ø–∏—Å–∫–µ, –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ message –ø—É—Å—Ç–æ–π
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç, —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        await ctx.replyWithHTML(result, message.length ? Markup.inlineKeyboard([
            Markup.button.callback('‚ñ∂Ô∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å', 'create_monitoring'), // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            Markup.button.callback('üö´ –û—Ç–º–µ–Ω–∏—Ç—å', 'clear_monitoring') // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –¥–µ–π—Å—Ç–≤–∏—è
        ]) : null)

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Monitoring/MonitoringAddMessage')
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞
        LOG(username, 'Messages/Monitoring/MonitoringAddMessage', error, ctx)
    }
}
//* END


//* START
const MonitoringDeleteMessage = async (ctx) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    const chatId = ctx.update.callback_query.from.id
    const messageId = ctx.update.callback_query.message.message_id

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'BOT' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'

    try {
        // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ –Ω–∞ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—É—Å—Ç–æ–º —Å–ø–∏—Å–∫–µ –∫–æ–º–ø–∞–Ω–∏–π
        await ctx.telegram.editMessageText(chatId, messageId, null, '<b>üî∏ –°–ø–∏—Å–æ–∫ –∫–æ–º–ø–∞–Ω–∏–π –ø—É—Å—Ç.</b>', {
            parse_mode: 'HTML' // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        });

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Monitoring/MonitoringDeleteMessage')
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞
        LOG(username, 'Messages/Monitoring/MonitoringDeleteMessage', error, ctx)
    }
}
//* END


//* START
const MonitoringRefreshMessage = async (ctx, message) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    const chatId = ctx.update.callback_query.from.id
    const messageId = ctx.update.callback_query.message.message_id

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'BOT' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'

    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∫–æ–º–ø–∞–Ω–∏–π –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å–∞—Ö
        const result = `<b>‚ôªÔ∏è [ ${DateNow()} ]  –£ –≤–∞—Å –≤ –æ—á–µ—Ä–µ–¥–∏:\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n</b>${message.map(item => `${item.status == 'üî∏ –°–æ–∑–¥–∞—ë—Ç—Å—è' || item.status == '‚úÖ –°—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞' ? 'üî∏' : 'üî∫'} <b>${item.name}</b>${item.status == 'üî∏ –°–æ–∑–¥–∞—ë—Ç—Å—è' || item.status == '‚úÖ –°—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞' || item.status == 'üî∏ –í –æ—á–µ—Ä–µ–¥–∏' ? '' : `\nüö´ ${item.status}`}\n–ö–ª—é—á–∏: ${item.keywords_status ? '‚úÖ' : 'üö´'} | –ü–æ—Å—Ç–±–µ–∫: ${item.callback_status ? '‚úÖ' : 'üö´'} | –ü–∏–∫—Å–µ–ª—å: ${item.pixel_status ? '‚úÖ' : 'üö´'}\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n`).join('')}`
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ —Å –Ω–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        await ctx.telegram.editMessageText(chatId, messageId, null, result, {
            parse_mode: 'HTML', // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
            reply_markup: { // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–û–±–Ω–æ–≤–∏—Ç—å"
                inline_keyboard: [
                    [{ text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data: 'refresh_monitoring' }]
                ]
            }
        })

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Monitoring/MonitoringRefreshMessage')
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞
        LOG(username, 'Messages/Monitoring/MonitoringRefreshMessage', error, ctx)
    }
}
//* END


//* START
const MonitoringEndMessage = async (ctx, message, sheet) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
    const chatId = ctx.update.callback_query.from.id;
    const messageId = ctx.update.callback_query.message.message_id;

    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'BOT' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT';

    try {
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞–∂–¥–æ–º —ç–ª–µ–º–µ–Ω—Ç–µ
        const result = `‚úÖ [ ${DateNow()} ]  <b>–û—á–µ—Ä–µ–¥—å –∑–∞–≤–µ—Ä—à–µ–Ω–∞:</b>\n` +
            message.map(item =>
                `-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n` +  // –ó–∞–º–µ–Ω—è–µ–º –¥–µ—Ñ–∏—Å—ã –Ω–∞ HTML-—Ç–µ–≥ <hr/>
                `${item.status === '‚úÖ –°—Å—ã–ª–∫–∞ –≥–æ—Ç–æ–≤–∞' ? '‚úÖ' : 'üî∫'} ` +
                `<b>${item.name}</b>\n`
            ).join('') +
            `-- -- -- -- -- -- -- -- -- -- -- -- -- -- --\n` +  // –ó–∞–º–µ–Ω—è–µ–º –¥–µ—Ñ–∏—Å—ã –Ω–∞ HTML-—Ç–µ–≥ <hr/>
            `<b>–¢–∞–±–ª–∏—Ü–∞:</b>\nhttps://docs.google.com/spreadsheets/d/${sheet}`;

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ —Å –Ω–æ–≤—ã–º —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—á–µ—Ä–µ–¥–∏
        await ctx.telegram.editMessageText(chatId, messageId, null, result + ' ', {
            parse_mode: 'HTML', // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∂–∏–º –ø–∞—Ä—Å–∏–Ω–≥–∞ HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
            reply_markup: { // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å"
                inline_keyboard: [
                    [{ text: '–û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å', callback_data: 'clear_monitoring' }]
                ]
            }
        });

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Monitoring/MonitoringEndMessage');
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞
        LOG(username, 'Messages/Monitoring/MonitoringEndMessage', error, ctx);
    }
};
//* END


module.exports = {
    MonitoringMessage,
    MonitoringAddMessage,
    MonitoringDeleteMessage,
    MonitoringRefreshMessage,
    MonitoringEndMessage
}