//? MESSAGES | USERS

//* Requires
const { LOG } = require('@helpers/base')


//* START
const UsersAddMessage = async (ctx, status, id, name) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    
    try {
        // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Users/UsersAddMessage')

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–ª–∏ –Ω–µ—É–¥–∞—á–µ
        return status ?
            `‚úÖ <b>[ @${name} | ID:${id} ]</b> —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω.` :
            `üö´ <b>[ @${name} | ID:${id} ]</b> –Ω–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω.`
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        LOG(username, 'Messages/Users/UsersAddMessage', error, ctx)
    }
}
//* END


//* START
const UsersRemoveMessage = async (ctx, status, id) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    
    try {
        // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Users/UsersRemoveMessage')

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –∏–ª–∏ –Ω–µ—É–¥–∞—á–µ
        return status ?
            `‚úÖ <b>[ ID:${id} ]</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.` :
            `üö´ <b>[ ID:${id} ]</b> –Ω–µ –±—ã–ª —É–¥–∞–ª—ë–Ω.`
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        LOG(username, 'Messages/Users/UsersRemoveMessage', error, ctx)
    }
}
//* END


//* START
const UsersListMessage = async (ctx, users) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    
    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        let message = "üöπ <b>–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n----------------------------------\n"

        // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º
        for (const user of users) {
            message += `üîπ <b>ID:</b> ${user.id}\nüî∏ <b>–ù–∏–∫:</b> ${user.name}\n----------------------------------\n`
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Users/UsersListMessage')
        return message
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        LOG(username, 'Messages/Users/UsersListMessage', error, ctx)
    }
}
//* END


module.exports = { 
    UsersAddMessage, 
    UsersRemoveMessage, 
    UsersListMessage 
}