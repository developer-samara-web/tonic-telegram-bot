//? MESSAGES | TONIC

//* Requires
const { LOG } = require('@helpers/base')


//* START
const StatusMessage = async (ctx, json, { Keywords }, { result }) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 'BOT' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    
    try {
        // –õ–æ–≥–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Tonic/StatusMessage')

        // –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–º–ø–∞–Ω–∏–∏
        return json.status === 'active' ?
            // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 'active', –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–º–ø–∞–Ω–∏–∏
            `‚úÖ <b>ID:${json['0'].id} | ${json['0'].name}</b>\n---------------------------------------------------------------\n<b>Offer:</b> ${json['0'].offer}\n<b>URL:</b> https://${json['0'].link}\n<b>Status:</b> ${json.status == 'active' ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ö†Ô∏è –°–æ–∑–¥–∞—ë—Ç—Å—è'}\n<b>Callbacks:</b> ${result && result.viewrt && result.click && result.redirect ? '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã' : '‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}\n<b>–ö–ª—é—á–∏:</b> ${Keywords != 'null' ? '\nüîÖ' + Keywords.join('\nüîÖ') : '‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}\n---------------------------------------------------------------` :
            json.status === 'pending' ?
                // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 'pending', –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ
                `üöº <b>ID:${json['0'].id} | ${json['0'].name}</b>\n---------------------------------------------------------------\n<b>Status:</b> ${json.status == 'active' ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ö†Ô∏è –°–æ–∑–¥–∞—ë—Ç—Å—è'}\n---------------------------------------------------------------` :
                // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ 'active' –∏–ª–∏ 'pending', –≤–æ–∑–≤—Ä–∞—â–∞–µ–º undefined
                undefined

    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞
        LOG(username, 'Messages/Tonic/StatusMessage', error, ctx)
        return false // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    }
}
//* END


//* START
const StatisticsMessage = async (ctx, json) => {
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    
    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    const MAX_MESSAGE_LENGTH = 4096
    const MAX_ITEMS_PER_MESSAGE = 10

    try {
        // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        let messageParts = []

        // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        const overallStats = json.reduce((acc, item) => {
            acc.totalRevenueUsd += parseFloat(item.revenueUsd) // –°—É–º–º–∏—Ä—É–µ–º –æ–±—â–∏–π –¥–æ—Ö–æ–¥
            acc.totalClicks += parseInt(item.clicks, 10) // –°—É–º–º–∏—Ä—É–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤
            return acc
        }, { totalRevenueUsd: 0, totalClicks: 0 })

        // –†–∞—Å—á–µ—Ç –æ–±—â–µ–≥–æ CPC
        const overallCPC = overallStats.totalClicks > 0 ? (overallStats.totalRevenueUsd / overallStats.totalClicks).toFixed(2) : '0.00'
        
        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
        const overallMessage = `‚ùáÔ∏è <b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n---------------------------------------------------------------\n<b>–û–±—â–∏–π –¥–æ—Ö–æ–¥: </b>${overallStats.totalRevenueUsd.toFixed(2)}$\n<b>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤: </b>${overallStats.totalClicks}\n<b>–û–±—â–∏–π CPC: </b>${overallCPC}$\n---------------------------------------------------------------\n\n`
        
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π
        messageParts.push(overallMessage)

        // –†–∞–∑–±–∏–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∫–∞–º–ø–∞–Ω–∏—è–º –Ω–∞ —á–∞—Å—Ç–∏
        for (let i = 0; i < json.length; i += MAX_ITEMS_PER_MESSAGE) {
            const currentSlice = json.slice(i, i + MAX_ITEMS_PER_MESSAGE) // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —á–∞—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
            let currentMessage = ''

            for (const item of currentSlice) {
                // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
                const stats = `üîÖ <b>${item.campaign_name}</b>\n---------------------------------------------------------------\n<b>Revenue: </b>${parseFloat(item.revenueUsd).toFixed(2)}$ | <b>Clicks: </b>${item.clicks} | <b>CPC: </b>${parseFloat(item.CPC).toFixed(2)}$\n---------------------------------------------------------------\n\n`
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É
                if (currentMessage.length + stats.length <= MAX_MESSAGE_LENGTH) {
                    currentMessage += stats // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫ —Ç–µ–∫—É—â–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
                } else {
                    messageParts.push(currentMessage) // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    currentMessage = stats // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
                }
            }
            messageParts.push(currentMessage) // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ –ø—É—Å—Ç–æ–µ
        }

        LOG(username, 'Messages/Tonic/StatisticsMessage') // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
        return messageParts // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∞—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    } catch (error) {
        LOG(username, 'Messages/Tonic/StatisticsMessage', error, ctx) // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
        return false
    }
}
//* END


//* START
const CompanyMessage = async (ctx, json) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    const MAX_MESSAGE_LENGTH = 4096

    try {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ JSON
        const overallStats = json.overall
        // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        let messageParts = []

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
        let overallMessage = `‚ùáÔ∏è <b>${overallStats.campaign_name}</b>\n---------------------------------------------------------------\n<b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n---------------------------------------------------------------\n<b>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤: </b>${overallStats.totalClicks}\n<b>–û–±—â–∏–π –¥–æ—Ö–æ–¥: </b>${parseFloat(overallStats.totalRevenueUsd).toFixed(2)}$\n<b>–û–±—â–∏–π CPC: </b>${overallStats.totalCPC}$\n---------------------------------------------------------------\n\n`

        // –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–∫–æ–≤ —Ä–∞–≤–Ω–æ 0, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false
        if (!json.overall.totalClicks) {
            return false
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π
        messageParts.push(overallMessage)

        // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        let currentMessage = ''
        // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –≤ byDate
        for (const item of json.byDate) {
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
            const itemMessage = `üìÖ <b>–î–∞—Ç–∞: ${item.date}</b>\n---------------------------------------------------------------\n<b>–î–æ—Ö–æ–¥: </b>${parseFloat(item.revenueUsd).toFixed(2)}$ | <b>–ö–ª–∏–∫–∏: </b>${item.clicks} | <b>CPC: </b>${item.CPC}$\n---------------------------------------------------------------\n\n`

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –¥–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É
            if (currentMessage.length + itemMessage.length <= MAX_MESSAGE_LENGTH) {
                // –ï—Å–ª–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫ —Ç–µ–∫—É—â–µ–º—É
                currentMessage += itemMessage
            } else {
                // –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π
                messageParts.push(currentMessage)
                // –û–±–Ω—É–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                currentMessage = itemMessage
            }
        }

        // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Å—Ç–∞–≤—à–µ–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –º–∞—Å—Å–∏–≤
        if (currentMessage) {
            messageParts.push(currentMessage)
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Tonic/CompanyMessage')
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        return messageParts
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        LOG(username, 'Messages/Tonic/CompanyMessage', error, ctx)
        return false
    }
}
//* END


//* START
const KeywordMessage = async (ctx, json) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    const MAX_MESSAGE_LENGTH = 4096
    // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    const MAX_ITEMS_PER_MESSAGE = 10

    try {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –∫–æ–º–ø–∞–Ω–∏–∏ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ JSON
        const company_name = json[0].campaign_name
        // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        let messageParts = []

        // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –º–∞—Å—Å–∏–≤—É JSON —Å —à–∞–≥–æ–º, —Ä–∞–≤–Ω—ã–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        for (let i = 0; i < json.length; i += MAX_ITEMS_PER_MESSAGE) {
            const currentSlice = json.slice(i, i + MAX_ITEMS_PER_MESSAGE) // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ä–µ–∑ –¥–∞–Ω–Ω—ã—Ö
            let currentMessage = `‚úÖ <b>${company_name}</b>\n\n` // –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏

            // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –≤ —Ç–µ–∫—É—â–µ–º —Å—Ä–µ–∑–µ
            for (const item of currentSlice) {
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
                const keywordMessage = `üîÖ<b>${item.keyword}</b>\n<b>Revenue: </b>${item.revenueUsd}$ | <b>Clicks: </b>${item.clicks} | <b>CPC: </b>${item.CPC}\n---------------------------------------------------------------\n`

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –¥–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É
                if (currentMessage.length + keywordMessage.length <= MAX_MESSAGE_LENGTH) {
                    // –ï—Å–ª–∏ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∫ —Ç–µ–∫—É—â–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
                    currentMessage += keywordMessage
                } else {
                    // –ï—Å–ª–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π
                    messageParts.push(currentMessage)
                    // –û–±–Ω—É–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
                    currentMessage = keywordMessage
                }
            }
            // –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤
            messageParts.push(currentMessage)
        }

        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Tonic/KeywordMessage')
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ —á–∞—Å—Ç–µ–π —Å–æ–æ–±—â–µ–Ω–∏—è
        return messageParts
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        LOG(username, 'Messages/Tonic/KeywordMessage', error, ctx)
        return false
    }
}
//* END


//* START
const CreateMessage = async (ctx, json) => {
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const username = ctx.message?.from?.username || ctx.callbackQuery?.from?.username || 'BOT'
    
    try {
        // –õ–æ–≥–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        LOG(username, 'Messages/Tonic/CreateMessage')
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Å—ã–ª–∫–∏
        return `‚úÖ <b>–°—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞</b>.`
    } catch (error) {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        LOG(username, 'Messages/Tonic/CreateMessage', error, ctx)
        return false
    }
}
//* END


module.exports = { 
    StatusMessage, 
    StatisticsMessage, 
    KeywordMessage, 
    CreateMessage, 
    CompanyMessage 
}